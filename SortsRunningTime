
#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#include<string.h>
#define N 40000
int n = N;
void yerdegis(int D[], int a, int b) {
	int temp;
	temp = D[a];
	D[a] = D[b];
	D[b] = temp;
}
//selection sort çalışma zamanı:n(n-1)/2
void selectionSort(int D[], int n) {

	int i;
	for (i = 0; i < n; i++) {
		int min = i;
		int j;
		for (j = i + 1; j < n; j++) {
			if (D[j] < D[min]) {
				min = j;
				yerdegis(D, min, i);

			}

		}
	}

}
//bubble sort çalışma zamanı:n^2
void bubbleSort(int arr[], int n)
{
	int i, j;
	for (i = 0; i < n - 1; i++)

	
		for (j = 0; j < n - i - 1; j++)
			if (arr[j] > arr[j + 1])
				yerdegis(arr, j, j + 1);
}
//insertion sort çalışma zamanı:n^2
void insertionSort(int D[], int n) {

	int i;
	for (i = 1; i < n; i++) {
		int j;
		for (j = i; j >= 0; j--) {
			if (D[j] < D[j - 1]) {
				yerdegis(D, j, j - 1);

			}
		}
	}

}
void diziyeRandomAta(int dizi[], int n) {
	int i;
	for (i = 0; i < n; i++) {
		dizi[i] = rand();
	}
}
//diziyi baska bir diziye atama
void diziAta(int d1[], int d2[], int n) {
	int i;
	for (i = 0; i < n; i++) {
		d1[i] = d2[i];
	}

}

int main() {
	int dizi1[N], dizi2[N], dizi3[N];
	int sayi_dizisi[N];
	int i;
	diziyeRandomAta(sayi_dizisi, n);
	diziAta(dizi1, sayi_dizisi, n);
	diziAta(dizi2, sayi_dizisi, n);
	diziAta(dizi3, sayi_dizisi, n);

	float t1, t2, t3;
	time_t start, end;
	printf("Insertion,bubble ve selection sort icin ");
	printf("calisma zamani hesaplaniyor..(10-15 sn arasi surebilir..)\n");

	time(&start);
	insertionSort(dizi1, n);
	time(&end);
	t1 = difftime(end, start);//insertion sort için çalışma zamanı hesabı

	time(&start);
	bubbleSort(dizi2, n);
	time(&end);
	t2 = difftime(end, start);//bubble sort için çaışma zamanı hesabı

	time(&start);
	selectionSort(dizi3, n);
	time(&end);
	t3 = difftime(end, start);//selection sort için çalışma hesabı

	printf("Insertion Sort icin:\n");
	printf("Calisma zamani:%f\n", t1);
	printf("Bubble Sort icin:\n");
	printf("Calisma zamani:%f\n", t2);
	printf("Selection Sort icin:\n");
	printf("Calisma zamani:%f\n", t3);


	system("pause");
	return 1;
}
